// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.2
// source: proto/cosigner.proto

package signer

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CosignerSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignBytes []byte `protobuf:"bytes,1,opt,name=sign_bytes,json=signBytes,proto3" json:"sign_bytes,omitempty"`
}

func (x *CosignerSignRequest) Reset() {
	*x = CosignerSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cosigner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosignerSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosignerSignRequest) ProtoMessage() {}

func (x *CosignerSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cosigner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosignerSignRequest.ProtoReflect.Descriptor instead.
func (*CosignerSignRequest) Descriptor() ([]byte, []int) {
	return file_proto_cosigner_proto_rawDescGZIP(), []int{0}
}

func (x *CosignerSignRequest) GetSignBytes() []byte {
	if x != nil {
		return x.SignBytes
	}
	return nil
}

type CosignerSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EphemeralPublic []byte `protobuf:"bytes,1,opt,name=ephemeral_public,json=ephemeralPublic,proto3" json:"ephemeral_public,omitempty"`
	Timestamp       int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature       []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *CosignerSignResponse) Reset() {
	*x = CosignerSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cosigner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosignerSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosignerSignResponse) ProtoMessage() {}

func (x *CosignerSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cosigner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosignerSignResponse.ProtoReflect.Descriptor instead.
func (*CosignerSignResponse) Descriptor() ([]byte, []int) {
	return file_proto_cosigner_proto_rawDescGZIP(), []int{1}
}

func (x *CosignerSignResponse) GetEphemeralPublic() []byte {
	if x != nil {
		return x.EphemeralPublic
	}
	return nil
}

func (x *CosignerSignResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CosignerSignResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CosignerGetEphemeralSecretPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int32 `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"` // --> int?
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round  int64 `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Step   int32 `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"` // --> int8
}

func (x *CosignerGetEphemeralSecretPartRequest) Reset() {
	*x = CosignerGetEphemeralSecretPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cosigner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosignerGetEphemeralSecretPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosignerGetEphemeralSecretPartRequest) ProtoMessage() {}

func (x *CosignerGetEphemeralSecretPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cosigner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosignerGetEphemeralSecretPartRequest.ProtoReflect.Descriptor instead.
func (*CosignerGetEphemeralSecretPartRequest) Descriptor() ([]byte, []int) {
	return file_proto_cosigner_proto_rawDescGZIP(), []int{2}
}

func (x *CosignerGetEphemeralSecretPartRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CosignerGetEphemeralSecretPartRequest) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CosignerGetEphemeralSecretPartRequest) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *CosignerGetEphemeralSecretPartRequest) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type CosignerGetEphemeralSecretPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceID                       int32  `protobuf:"varint,1,opt,name=source_iD,json=sourceID,proto3" json:"source_iD,omitempty"` // --> int?
	SourceEphemeralSecretPublicKey []byte `protobuf:"bytes,2,opt,name=source_ephemeral_secret_publicKey,json=sourceEphemeralSecretPublicKey,proto3" json:"source_ephemeral_secret_publicKey,omitempty"`
	EncryptedSharePart             []byte `protobuf:"bytes,3,opt,name=encrypted_share_part,json=encryptedSharePart,proto3" json:"encrypted_share_part,omitempty"`
	SourceSig                      []byte `protobuf:"bytes,4,opt,name=source_sig,json=sourceSig,proto3" json:"source_sig,omitempty"`
}

func (x *CosignerGetEphemeralSecretPartResponse) Reset() {
	*x = CosignerGetEphemeralSecretPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_cosigner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CosignerGetEphemeralSecretPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CosignerGetEphemeralSecretPartResponse) ProtoMessage() {}

func (x *CosignerGetEphemeralSecretPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cosigner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CosignerGetEphemeralSecretPartResponse.ProtoReflect.Descriptor instead.
func (*CosignerGetEphemeralSecretPartResponse) Descriptor() ([]byte, []int) {
	return file_proto_cosigner_proto_rawDescGZIP(), []int{3}
}

func (x *CosignerGetEphemeralSecretPartResponse) GetSourceID() int32 {
	if x != nil {
		return x.SourceID
	}
	return 0
}

func (x *CosignerGetEphemeralSecretPartResponse) GetSourceEphemeralSecretPublicKey() []byte {
	if x != nil {
		return x.SourceEphemeralSecretPublicKey
	}
	return nil
}

func (x *CosignerGetEphemeralSecretPartResponse) GetEncryptedSharePart() []byte {
	if x != nil {
		return x.EncryptedSharePart
	}
	return nil
}

func (x *CosignerGetEphemeralSecretPartResponse) GetSourceSig() []byte {
	if x != nil {
		return x.SourceSig
	}
	return nil
}

var File_proto_cosigner_proto protoreflect.FileDescriptor

var file_proto_cosigner_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x6f, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x14,
	0x43, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x79, 0x0a, 0x25, 0x43,
	0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0xe1, 0x01, 0x0a, 0x26, 0x43, 0x6f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x12, 0x49,
	0x0a, 0x21, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1e, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x69, 0x67, 0x32, 0xb1, 0x01, 0x0a, 0x0f, 0x43,
	0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x14, 0x2e, 0x43, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43,
	0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65,
	0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x26, 0x2e,
	0x43, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x47, 0x65, 0x74, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09,
	0x5a, 0x07, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_cosigner_proto_rawDescOnce sync.Once
	file_proto_cosigner_proto_rawDescData = file_proto_cosigner_proto_rawDesc
)

func file_proto_cosigner_proto_rawDescGZIP() []byte {
	file_proto_cosigner_proto_rawDescOnce.Do(func() {
		file_proto_cosigner_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cosigner_proto_rawDescData)
	})
	return file_proto_cosigner_proto_rawDescData
}

var file_proto_cosigner_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_cosigner_proto_goTypes = []interface{}{
	(*CosignerSignRequest)(nil),                    // 0: CosignerSignRequest
	(*CosignerSignResponse)(nil),                   // 1: CosignerSignResponse
	(*CosignerGetEphemeralSecretPartRequest)(nil),  // 2: CosignerGetEphemeralSecretPartRequest
	(*CosignerGetEphemeralSecretPartResponse)(nil), // 3: CosignerGetEphemeralSecretPartResponse
}
var file_proto_cosigner_proto_depIdxs = []int32{
	0, // 0: CosignerService.Sign:input_type -> CosignerSignRequest
	2, // 1: CosignerService.GetEphemeralSecretPart:input_type -> CosignerGetEphemeralSecretPartRequest
	1, // 2: CosignerService.Sign:output_type -> CosignerSignResponse
	3, // 3: CosignerService.GetEphemeralSecretPart:output_type -> CosignerGetEphemeralSecretPartResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_cosigner_proto_init() }
func file_proto_cosigner_proto_init() {
	if File_proto_cosigner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_cosigner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosignerSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cosigner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosignerSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cosigner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosignerGetEphemeralSecretPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_cosigner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CosignerGetEphemeralSecretPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cosigner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cosigner_proto_goTypes,
		DependencyIndexes: file_proto_cosigner_proto_depIdxs,
		MessageInfos:      file_proto_cosigner_proto_msgTypes,
	}.Build()
	File_proto_cosigner_proto = out.File
	file_proto_cosigner_proto_rawDesc = nil
	file_proto_cosigner_proto_goTypes = nil
	file_proto_cosigner_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CosignerServiceClient is the client API for CosignerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CosignerServiceClient interface {
	Sign(ctx context.Context, in *CosignerSignRequest, opts ...grpc.CallOption) (*CosignerSignResponse, error)
	GetEphemeralSecretPart(ctx context.Context, in *CosignerGetEphemeralSecretPartRequest, opts ...grpc.CallOption) (*CosignerGetEphemeralSecretPartResponse, error)
}

type cosignerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCosignerServiceClient(cc grpc.ClientConnInterface) CosignerServiceClient {
	return &cosignerServiceClient{cc}
}

func (c *cosignerServiceClient) Sign(ctx context.Context, in *CosignerSignRequest, opts ...grpc.CallOption) (*CosignerSignResponse, error) {
	out := new(CosignerSignResponse)
	err := c.cc.Invoke(ctx, "/CosignerService/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cosignerServiceClient) GetEphemeralSecretPart(ctx context.Context, in *CosignerGetEphemeralSecretPartRequest, opts ...grpc.CallOption) (*CosignerGetEphemeralSecretPartResponse, error) {
	out := new(CosignerGetEphemeralSecretPartResponse)
	err := c.cc.Invoke(ctx, "/CosignerService/GetEphemeralSecretPart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CosignerServiceServer is the server API for CosignerService service.
type CosignerServiceServer interface {
	Sign(context.Context, *CosignerSignRequest) (*CosignerSignResponse, error)
	GetEphemeralSecretPart(context.Context, *CosignerGetEphemeralSecretPartRequest) (*CosignerGetEphemeralSecretPartResponse, error)
}

// UnimplementedCosignerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCosignerServiceServer struct {
}

func (*UnimplementedCosignerServiceServer) Sign(context.Context, *CosignerSignRequest) (*CosignerSignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}
func (*UnimplementedCosignerServiceServer) GetEphemeralSecretPart(context.Context, *CosignerGetEphemeralSecretPartRequest) (*CosignerGetEphemeralSecretPartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEphemeralSecretPart not implemented")
}

func RegisterCosignerServiceServer(s *grpc.Server, srv CosignerServiceServer) {
	s.RegisterService(&_CosignerService_serviceDesc, srv)
}

func _CosignerService_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CosignerSignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosignerServiceServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CosignerService/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosignerServiceServer).Sign(ctx, req.(*CosignerSignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CosignerService_GetEphemeralSecretPart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CosignerGetEphemeralSecretPartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CosignerServiceServer).GetEphemeralSecretPart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CosignerService/GetEphemeralSecretPart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CosignerServiceServer).GetEphemeralSecretPart(ctx, req.(*CosignerGetEphemeralSecretPartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CosignerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CosignerService",
	HandlerType: (*CosignerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sign",
			Handler:    _CosignerService_Sign_Handler,
		},
		{
			MethodName: "GetEphemeralSecretPart",
			Handler:    _CosignerService_GetEphemeralSecretPart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/cosigner.proto",
}
